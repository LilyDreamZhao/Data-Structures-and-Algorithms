#1. two sum
#82.92%
class Solution:
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        #keys=numpy.arrange(len(nums)) leetcode不允许导入numpy
        #my_map = dict(zip(nums,keys))
        my_map={}
        for i in range(len(nums)):
            my_map[nums[i]]=i;
        for i in range(len(nums)):
            complement=target-nums[i]
            if complement in my_map and  my_map[complement] != i:
                return i,my_map[complement]
        raise IndexError("No two sum solution")
        
#7. Reverse Integer
#70.73%
class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        result=0
        flag=1;
        if x<0:
            flag=-1
            x=-x;
        while x is not 0:
            result = result*10 + x%10
            x /= 10
        if result > 2147483647 or result < -2147483648:
            result=0
        return result*flag
